openapi: 3.0.0
info:
  title: Bug Management API
  description: API for managing bugs in software projects
  version: 1.0.0
  contact:
    email: support@bugmanagement.com

servers:
  - url: http://localhost:3000
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /auth/login:
    post:
      summary: User login
      description: Allows users to login with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: mail@example.com
                password:
                  type: string
                  format: password
                  example: parola
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT authentication token
        '401':
          description: Invalid credentials

  /projects:
    post:
      summary: Register a new project
      tags:
        - Projects
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Bug Tracking Application"
                repositoryUrl:
                  type: string
                  example: "https://github.com/student/bug-tracker"
                teamMembers:
                  type: array
                  items:
                    type: string
                  example: ["member1@example.com", "member2@example.com"]
      responses:
        '201':
          description: Project successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Project registered successfully
                  project:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Bug Tracking Application"
                      repositoryUrl:
                        type: string
                        example: "https://github.com/student/bug-tracker"
                      teamMembers:
                        type: array
                        items:
                          type: string
                        example: ["member1@example.com", "member2@example.com"]
                      createdBy:
                        type: string
                        example: "student@example.com"
        '400':
          description: Invalid project data
        '401':
          description: Unauthorized access

  /projects/{projectId}/add-tester:
    post:
      summary: Add tester to project
      description: Allows a student to add themselves as a tester to an existing project
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                testerEmail:
                  type: string
                  format: email
                  example: tester@example.com
      responses:
        '200':
          description: Tester successfully added to the project
        '404':
          description: Project not found

  /projects/{projectId}/bugs:
    post:
      summary: Report a new bug
      description: Allows a tester to report a new bug in the project
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Bug in registration feature"
                description:
                  type: string
                  example: "The registration form does not work when entering a special character in the password."
                severity:
                  type: string
                  enum: [Low, Medium, High]
                  example: High
                priority:
                  type: string
                  enum: [Low, Medium, High]
                  example: Medium
                commitLink:
                  type: string
                  format: uri
                  example: https://github.com/student/bug-tracker/commit/abc123
      responses:
        '201':
          description: Bug successfully reported
        '400':
          description: Invalid bug data

    get:
      summary: List bugs for a project
      description: Allows project members to view all bugs related to a specific project
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the project
      responses:
        '200':
          description: List of bugs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: bug123
                    title:
                      type: string
                      example: "Bug in login feature"
                    severity:
                      type: string
                      enum: [Low, Medium, High]
                      example: High
                    status:
                      type: string
                      enum: [Open, In Progress, Resolved]
                      example: Open
